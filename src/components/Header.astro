---
import HeroButton from "../icons/HeroButton.astro";
import IconMoon from "../icons/IconMoon.astro";
import IconSun from "../icons/IconSun.astro";

const { class: className, id } = Astro.props;
---

<header
  id={id}
  data-section={id}
  class={` ${className} shadow-md inset-x-0 top-0 z-50 md:relative md:shadow-none md:bg-transparent  pt-8 pb-4  dark:shadow-none`}
>
  <!-- Contenedor principal del menú de navegación -->
  <nav class="wrapper h-20 flex items-center justify-between">
    <!-- Logo: Enlace que apunta a la página principal -->
    <a href="./" class="md:w-1/3 max-w-[178px]">
      <!-- Imagen del logo -->
      <img src="/src/assets/logo.png" alt="logo" class="w-full" />
    </a>

    <input type="checkbox" id="menu" class="peer hidden" />

    <label
      for="menu"
      class="bg-open-menu size-[51px] bg-cover bg-center cursor-pointer peer-checked:hidden md:hidden"
    ></label>

    <div
      class="fixed inset-y-0 right-0 w-[406px] bg-gradient-to-b from-white/70 to-black/70 translate-x-full peer-checked:translate-x-0 transition-transform duration-300 z-40 md:static md:translate-x-0 md:bg-none"
    >
      <ul
        class="absolute right-0 top-8 p-4 bg-day-main w-[60%] rounded-s-2xl h-max text-center grid gap-11 font-bold text-base text-white shadow-2xl dark:bg-night-main
    md:w-max md:static md:bg-transparent md:p-0 md:grid-flow-col"
      >
        <li>
          <div class="flex justify-between items-center px-3">
            <HeroButton
              aria-label="btn-theme"
              id="toggle-theme"
              class="h-auto flex items-center bg-day-main border-2 p-1 w-auto rounded-full hover:bg-day-secondary hover:dark:bg-day-secondary transition-transform hover:rotate-180 dark:rotate-0 duration-100 ease-in-out"
            >
              <IconSun class="size-7 dark:hidden" />
              <IconMoon class="size-7 hidden dark:inline" />
            </HeroButton>

            <label
              for="menu"
              class="bg-close-menu size-[51px] bg-cover bg-center cursor-pointer duration-300 hover:rotate-90 z-50 md:hidden"
            >
            </label>
          </div>
        </li>
        <li><a href="#">About Us</a></li>
        <li><a href="#">Our Rooms</a></li>
        <li><a href="#">Purr Care</a></li>
        <li><a href="#">Testimonial</a></li>

        <li>
          <div class="mt-4">
            <button class="border-2 bg-day-secondary rounded-xl px-4 py-1"
              >BOOK NOW</button
            >
          </div>
        </li>
      </ul>
    </div>

    <!-- Botón adicional (sólo visible en pantallas grandes) -->
    <a
      href="https://lytasoft.com"
      target="_blank"
      class="button shadow-bright-red/30 hidden py-3 lg:block">Get Started</a
    >
  </nav>
</header>

<script>
  const themeToggle = document.getElementById("toggle-theme");
  const htmlElement = document.documentElement;

  // Detectar el esquema de color del sistema y aplicarlo al cargar la página
  const preferredTheme = window.matchMedia("(prefers-color-scheme: dark)")
    .matches
    ? "dark"
    : "light";
  if (preferredTheme === "dark") {
    htmlElement.classList.add("dark");
  } else {
    htmlElement.classList.remove("dark");
  }

  // Escuchar cambios en el esquema de color del sistema
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => {
      if (event.matches) {
        htmlElement.classList.add("dark");
      } else {
        htmlElement.classList.remove("dark");
      }
    });

  // Alternar el tema manualmente con el botón
  if (themeToggle) {
    themeToggle.addEventListener("click", () => {
      htmlElement.classList.toggle("dark");
    });
  }
</script>
